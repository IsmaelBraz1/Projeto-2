{
  "version": 3,
  "sources": ["../../shader-particle-engine/Gruntfile.js"],
  "sourcesContent": ["module.exports = function( grunt ) {\n    'use strict';\n\n    var packageJSON = grunt.file.readJSON( 'package.json' );\n\n    var licenseBanner =\n        '/* ' + packageJSON.name + ' ' + packageJSON.version + '\\n' +\n        ' * ' + '\\n' +\n        ' * (c) 2015 Luke Moody (http://www.github.com/squarefeet)' + '\\n' +\n        ' *     Originally based on Lee Stemkoski\\'s original work (https://github.com/stemkoski/stemkoski.github.com/blob/master/Three.js/js/ParticleEngine.js).' + '\\n' +\n        ' *' + '\\n' +\n        ' * ' + packageJSON.name + ' may be freely distributed under the MIT license (See LICENSE at root of this repository.)' + '\\n */\\n';\n\n\n    // Specify input files and output paths\n    var files = [\n            'src/SPE.js',\n            'src/helpers/SPE.TypedArrayHelper.js',\n            'src/helpers/SPE.ShaderAttribute.js',\n            'src/shaders/SPE.shaderChunks.js',\n            'src/shaders/SPE.shaders.js',\n            'src/core/SPE.utils.js',\n            'src/core/SPE.Group.js',\n            'src/core/SPE.Emitter.js'\n        ],\n        outputPath = 'build/SPE.js',\n        outputPathMin = outputPath.replace( '.js', '.min.js' );\n\n\n    var uglifySettings = {\n        min: {\n            options: {\n                mangle: true,\n                exportAll: true,\n                compress: {\n                    dead_code: true,\n                },\n                banner: licenseBanner,\n                report: 'min',\n                maxLineLen: 1000,\n            },\n            files: {}\n        }\n    };\n\n    // Set the path for where the minified files should be saved\n    uglifySettings.min.files[ outputPathMin ] = [ outputPath ];\n\n\n    grunt.initConfig( {\n        uglify: uglifySettings,\n\n        concat: {\n            options: {\n                separator: '\\n\\n',\n                banner: licenseBanner,\n            },\n            dist: {\n                src: files,\n                dest: outputPath,\n            },\n        },\n\n        jsdoc: {\n            dist: {\n                src: 'src/**/*.js',\n                options: {\n                    destination: 'docs/api'\n                }\n            }\n        },\n\n        docco: {\n            options: {\n                dst: 'docs/source/',\n                layout: 'parallel'\n            },\n            docs: {\n                src: 'build/SPE.js'\n            }\n        }\n    } );\n\n    grunt.loadNpmTasks( 'grunt-contrib-concat' );\n    grunt.loadNpmTasks( 'grunt-contrib-uglify' );\n    grunt.loadNpmTasks( 'grunt-jsdoc' );\n    grunt.loadNpmTasks( 'grunt-docco2' );\n\n    grunt.registerTask( 'default', [ 'concat', 'uglify' ] );\n    grunt.registerTask( 'docs', [ 'jsdoc', 'docco' ] );\n};"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,WAAO,UAAU,SAAU,OAAQ;AAC/B;AAEA,UAAI,cAAc,MAAM,KAAK,SAAU,cAAe;AAEtD,UAAI,gBACA,QAAQ,YAAY,OAAO,MAAM,YAAY,UAAU,uOAK/C,YAAY,OAAO;AAI/B,UAAI,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ,GACA,aAAa,gBACb,gBAAgB,WAAW,QAAS,OAAO,SAAU;AAGzD,UAAI,iBAAiB;AAAA,QACjB,KAAK;AAAA,UACD,SAAS;AAAA,YACL,QAAQ;AAAA,YACR,WAAW;AAAA,YACX,UAAU;AAAA,cACN,WAAW;AAAA,YACf;AAAA,YACA,QAAQ;AAAA,YACR,QAAQ;AAAA,YACR,YAAY;AAAA,UAChB;AAAA,UACA,OAAO,CAAC;AAAA,QACZ;AAAA,MACJ;AAGA,qBAAe,IAAI,MAAO,aAAc,IAAI,CAAE,UAAW;AAGzD,YAAM,WAAY;AAAA,QACd,QAAQ;AAAA,QAER,QAAQ;AAAA,UACJ,SAAS;AAAA,YACL,WAAW;AAAA,YACX,QAAQ;AAAA,UACZ;AAAA,UACA,MAAM;AAAA,YACF,KAAK;AAAA,YACL,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,QAEA,OAAO;AAAA,UACH,MAAM;AAAA,YACF,KAAK;AAAA,YACL,SAAS;AAAA,cACL,aAAa;AAAA,YACjB;AAAA,UACJ;AAAA,QACJ;AAAA,QAEA,OAAO;AAAA,UACH,SAAS;AAAA,YACL,KAAK;AAAA,YACL,QAAQ;AAAA,UACZ;AAAA,UACA,MAAM;AAAA,YACF,KAAK;AAAA,UACT;AAAA,QACJ;AAAA,MACJ,CAAE;AAEF,YAAM,aAAc,sBAAuB;AAC3C,YAAM,aAAc,sBAAuB;AAC3C,YAAM,aAAc,aAAc;AAClC,YAAM,aAAc,cAAe;AAEnC,YAAM,aAAc,WAAW,CAAE,UAAU,QAAS,CAAE;AACtD,YAAM,aAAc,QAAQ,CAAE,SAAS,OAAQ,CAAE;AAAA,IACrD;AAAA;AAAA;",
  "names": []
}
